/*
 * test
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type PostUserRequest struct {

	FirstName *interface{} `json:"firstName"`

	LastName *interface{} `json:"lastName"`

	Email *interface{} `json:"email"`

	DateOfBirth *interface{} `json:"dateOfBirth"`
}

// AssertPostUserRequestRequired checks if the required fields are not zero-ed
func AssertPostUserRequestRequired(obj PostUserRequest) error {
	elements := map[string]interface{}{
		"firstName": obj.FirstName,
		"lastName": obj.LastName,
		"email": obj.Email,
		"dateOfBirth": obj.DateOfBirth,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecursePostUserRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PostUserRequest (e.g. [][]PostUserRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePostUserRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPostUserRequest, ok := obj.(PostUserRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPostUserRequestRequired(aPostUserRequest)
	})
}
